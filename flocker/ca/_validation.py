"""
TLS context factories used to validate the various kinds of
certificates generated by the CA.
"""

from zope.interface import implementer

from twisted.web.iweb import IPolicyForHTTPS
from twisted.internet.ssl import (
    optionsForClientTLS, CertificateOptions,
    )

from pyrsistent import PRecord, field


@implementer(IPolicyForHTTPS)
class ControlServicePolicy(PRecord):
    """
    HTTPS TLS policy for validating the control service's identity, and
    providing the HTTP client's identity.

    :ivar Certificate ca_certificate: The certificate authority's
        certificate.

    :ivar PrivateCertificate client_certificate: Client's
        certificate/private key pair.
    """
    ca_certificate = field(mandatory=True)
    client_certificate = field(mandatory=True)

    def creatorForNetloc(self, hostname, port):
        return optionsForClientTLS(u"control-service",
                                   trustRoot=self.ca_certificate,
                                   clientCertificate=self.client_certificate)


class AMPContextFactory(object):
    """
    Context factory that validates AMP clients.

    Or maybe actually these'll be params:

    :ivar Certificate ca_certificate: The certificate authority's
        certificate.

    :ivar PKey control_key: The control service's private key.

    :ivar X509 control_certificate: The control service's certificate.
    """
    def __init__(self, ca_certificate, control_key, control_certificate):
        self._default_options = CertificateOptions(
            privateKey=control_key, certificate=control_certificate,
            trustRoot=ca_certificate)

    def getContext(self):
        def verify(conn, cert, errno, depth, preverify_ok):
            if not preverify_ok:
                return False
            # Ensure certificate's subjectAltName has othername that
            # starts with "node-".
        context = self._default_options.getContext()
        context.set_verify(verify)
        return context


# RESTAPIContextFactory is like above, just slightly different validation.
