# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# This allows the VM to be restarted during provisioning, necessary after
# updating the kernel
unless Vagrant.has_plugin?("vagrant-reload")
  raise "vagrant-reload plugin is not installed"
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.box = "box-cutter/centos70"
  # Update kernel and start to configure base system
  config.vm.provision :shell, :path => "bootstrap.sh", :privileged => true
  config.vm.provision :reload
  # Finish configuring base system
  config.vm.provision :shell, :path => "post-reboot-bootstrap.py", :privileged => true,
      :args => [
          ENV.fetch('FLOCKER_RPM_VERSION', ''),
          ENV.fetch('FLOCKER_BRANCH', ''),
          ENV.fetch('FLOCKER_BUILD_SERVER', '')
      ]
  # Prepare caches
  config.vm.provision :shell, :path => "cache.sh", :privileged => true
  # Cleanup
  config.vm.provision :shell, :path => "../cleanup.sh", :privileged => true

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
end
