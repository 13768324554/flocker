#!/usr/bin/env python
# Copyright 2015 ClusterHQ Inc.  See LICENSE file for details.
"""
Check that published artifacts work.
"""
import os
import unittest

from admin.client import DockerRunner, get_steps_pkg, get_steps_pip, run_steps


class TestPackages(unittest.TestCase):

    def setUp(self):
        self.longMessage = True

    def test_centos_7_rpm(self):
        # Although CentOS 7 is not a supported client, we generate the
        # packages for it, so we install it here to test RPM packaging.
        distribution = 'centos-7'
        steps = get_steps_pkg(distribution)
        runner = DockerRunner.from_distribution(distribution)
        filename = '{}.out'.format(self.id())
        with open(filename, 'w') as out:
            self.assertEqual(
                run_steps(runner, steps, out), 0,
                'See file {!r}'.format(filename))
        os.remove(filename)

    def test_ubuntu_14_04_deb(self):
        distribution = 'ubuntu-14.04'
        steps = get_steps_pkg(distribution)
        runner = DockerRunner.from_distribution(distribution)
        filename = '{}.out'.format(self.id())
        with open(filename, 'w') as out:
            self.assertEqual(
                run_steps(runner, steps, out), 0,
                'See file {!r}'.format(filename))
        os.remove(filename)

    def test_ubuntu_15_04_deb(self):
        distribution = 'ubuntu-15.04'
        steps = get_steps_pkg(distribution)
        runner = DockerRunner.from_distribution(distribution)
        filename = '{}.out'.format(self.id())
        with open(filename, 'w') as out:
            self.assertEqual(
                run_steps(runner, steps, out), 0,
                'See file {!r}'.format(filename))
        os.remove(filename)

    def test_pip_install(self):
        distribution = 'ubuntu-15.04'
        steps = get_steps_pip(distribution)
        runner = DockerRunner.from_distribution(distribution)
        filename = '{}.out'.format(self.id())
        with open(filename, 'w') as out:
            self.assertEqual(
                run_steps(runner, steps, out), 0,
                'See file {!r}'.format(filename))
        os.remove(filename)


if __name__ == '__main__':
    unittest.main()
