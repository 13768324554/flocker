# -*- mode: ruby -*-
# vi: set ft=ruby sw=2 :

# This requires Vagrant 1.6.2 or newer (earlier versions can't reliably
# configure the Fedora 20 network stack).
Vagrant.require_version ">= 1.6.2"

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

# Run the admin/credentials/make_credentials script before up'ing this.

clustercrt = File.read("../../credentials/cluster.crt")
controlcrt = File.read("../../credentials/control-172.16.255.240.crt")
controlkey = File.read("../../credentials/control-172.16.255.240.key")
node1crt = File.read("../../credentials/node1/node1.crt")
node1key = File.read("../../credentials/node1/node1.key")
node2crt = File.read("../../credentials/node2/node2.crt")
node2key = File.read("../../credentials/node2/node2.key")
$bootstrapnode1 = <<EOL
echo "#{clustercrt}" >> /etc/flocker/cluster.crt
echo "#{controlcrt}" >> /etc/flocker/control-service.crt
echo "#{controlkey}" >> /etc/flocker/control-service.key
echo "#{node1crt}" >> /etc/flocker/node.crt
echo "#{node1key}" >> /etc/flocker/node.key
echo "control-service: {hostname: 172.16.255.240, port: 4524}
dataset: {backend: zfs}
version: 1" >> /etc/flocker/agent.yml
systemctl enable flocker-control
systemctl start flocker-control
systemctl enable flocker-dataset-agent
systemctl start flocker-dataset-agent
systemctl enable flocker-container-agent
systemctl start flocker-container-agent
EOL

$bootstrapnode2 = <<EOL
echo "#{clustercrt}" >> /etc/flocker/cluster.crt
echo "#{node2crt}" >> /etc/flocker/node.crt
echo "#{node2key}" >> /etc/flocker/node.key
echo "control-service: {hostname: 172.16.255.240, port: 4524}
dataset: {backend: zfs}
version: 1" >> /etc/flocker/agent.yml
systemctl enable flocker-dataset-agent
systemctl start flocker-dataset-agent
systemctl enable flocker-container-agent
systemctl start flocker-container-agent
EOL

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "clusterhq/flocker-tutorial"

  begin
    config.vm.box_version = "= " + ENV.fetch('FLOCKER_BOX_VERSION')
  rescue KeyError
  end

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  config.vm.define "node1" do |node1|
    node1.vm.network :private_network, :ip => "172.16.255.240"
    node1.vm.hostname = "node1"
    node1.vm.provision "shell", inline: $bootstrapnode1, privileged: true    
  end

  config.vm.define "node2" do |node2|
    node2.vm.network :private_network, :ip => "172.16.255.241"
    node2.vm.hostname = "node2"
    node2.vm.provision "shell", inline: $bootstrapnode2, privileged: true    
  end

end
