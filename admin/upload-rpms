#!/usr/bin/env python
"""
Update the ClusterHQ yum repository with new flocker packages.

The ClusterHQ yum repository contains packages for flocker, as well as the
depenencies which aren't available in fedora 20.  It is currently hosted in
google's cloud storage.  When doing a release, we want to add the new flocker
packages, while preserving the existing packages in the repository.  To do
this, we download the current repository, add the new package, update the
metadata, and then upload the repository.
"""

from __future__ import print_function

from subprocess import check_call
from pipes import quote

from twisted.python.filepath import FilePath

def release_branch(version):
    stream = '.'.join(version.split('.')[:2])
    return 'release/flocker-%s' % (stream,)

FLOCKER_PACKAGES = ['python-flocker', 'flocker-cli', 'flocker-node']

def run_command(args):
    from subprocess import check_call
    print('Running: %s' % (' '.join(map(quote, args))))
    check_call(args)

def update_repo(rpm_directory, target_repo, source_repo, packages):
    """
    Update ``target_repo`` yum repository with ``packages`` from ``source_repo`` repository.
    """
    rpm_directory.createDirectory()
    check_call(['gsutil', 'cp', '-R', target_repo + '/**', rpm_directory.path])

    yum_repo_config = rpm_directory.child('build.repo')
    yum_repo_config.setContent(dedent("""
         [flocker]
         name=flocker
         baseurl=%s
         """) % (source_repo,))
    check_call(['yumdownloader', '-c', yum_repo_config.path, '--disablerepo=*', '--enablerepo=flocker', '--destdir', rpm_directory.path] + packages)
    yum_repo_config.remove()

    check_call(['createrepo', '--update', rpm_directory.path])
    check_call(['gsutil', 'cp', '-R', rpm_directory.path + '/**', target_repo])

def upload_rpms(scratch_directory, version):
    update_repo(rpm_directory=scratch_directory.child('x86_64'),
                target_repo='gs://archive.clusterhq.com/fedora/20/x86_64/',
                source_repo='http://build.clusterhq.com/results/fedora/20/x86_64/%s/' % (version,),
                packages=FLOCKER_PACKAGES)
    update_repo(rpm_directory=scratch_directory.child('SRPMS'),
                target_repo='gs://archive.clusterhq.com/fedora/20/SRPMS/',
                source_repo='http://build.clusterhq.com/results/fedora/20/x86_64/%s/' % (version,),
                packages=['--source', 'python-flocker'])


def main(scratch_directory, version):
    scratch_directory = FilePath(scratch_directory)
    if scratch_directory.exists():
        assert scratch_directory.isdir() and len(scratch_directory.listdir()) == 0
    else:
        scratch_directory.createDirectory()

    upload_rpms(scratch_directory, version)


if __name__ == '__main__':
    from sys import argv
    main(*argv[1:])
